import org.apache.tools.ant.taskdefs.condition.Os

ext {
    ext {
        groovyVersion = '2.3.6'
        gebVersion = '0.10.0'
        seleniumVersion = '2.44.0'
        chromeDriverVersion = '2.14'
    }
}
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/libs-milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
        classpath 'org.springframework:springloaded:1.2.1.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply from: "osSpecificDownloads.gradle"

jar {
    baseName = 'colonel-blotto-online'
    version = '0.1'
}

springBoot {
    mainClass = "blotto.Application"
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        scopes.COMPILE.plus += [configurations.compile]
        scopes.COMPILE.plus += [configurations.testCompile]
        downloadJavadoc = false
        downloadSources = true
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "http://repo.grails.org/grails/libs-snapshots-local" }
}

dependencies {
    compile files("src/main/resources")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-aop")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile("org.codehaus.groovy:groovy-all:$groovyVersion")

    compile("org.grails:gorm-hibernate4-spring-boot:1.1.0.RELEASE")
    compile("org.grails:grails-plugin-validation:2.4.0")
    compile("org.hibernate:hibernate-validator")

    compile("org.grails:grails-gsp-spring-boot:1.0.0.BUILD-SNAPSHOT")
    compile("org.grails:grails-web-gsp:2.4.0")
    compile("org.grails:grails-web-jsp:2.4.0")
    compile("javax.servlet.jsp:javax.servlet.jsp-api:2.3.1")

    runtime("com.h2database:h2")
    runtime("mysql:mysql-connector-java:5.1.34")

    compile("org.liquibase:liquibase-core")
    compile("org.liquibase.ext:liquibase-hibernate4:3.5")

    compile("org.apache.tomcat.embed:tomcat-embed-el")

    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'junit:junit:4.11'

    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:$seleniumVersion"

    compile 'com.google.code.gson:gson:2.2.4'
    compile 'javax.servlet.jsp.jstl:jstl:1.2'
    compile 'taglibs:standard:1.1.2'

    compile 'javax.mail:mail:1.4.7'
    compile 'joda-time:joda-time:2.7'

    compile('org.subethamail:subethasmtp:3.1.7')
}

test {
    dependsOn unzipChromeDriver
    def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
    systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath

    testLogging {
        //showStandardStreams = true
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed"
    }
}

clean {
    delete "target"
    delete "build"
    delete "classes"
}